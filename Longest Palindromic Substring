class Solution {
public:
    string longestPalindrome(string s) {
    long long int n=s.length();
    vector<bool>vect1(n);
    vector<vector<bool>>dp(n,vect1);
    for(long long int i(0);i<(n-1);i++){
        if(s[i]==s[i+1]){
            dp[i][i+1]=true;
        }
    }
        for(long long int i(0);i<n;i++){
            dp[i][i]=true;
        }
    for(long long int i(n-1);i>=0;i--){
        for(long long int j(i);j<n;j++){
            if((i!=j)and(i!=(j-1)))
            dp[i][j]=(s[i]==s[j])and(dp[i+1][j-1]);
        }
    }
    long long int ans=0;
    for(long long int i(0);i<n;i++){
        for(long long int j(i);j<n;j++){
            if(dp[i][j]==true){
                ans=max(ans,(j-i+1));
            }
        }
    }
    string val;
    for(long long int i(0);i<n;i++){
        for(long long int j(i);j<n;j++){
            if((dp[i][j]==true)and(ans==(j-i+1))){
                val=s.substr(i,j-i+1);
            }
        }}    
    
   return val ; }
};

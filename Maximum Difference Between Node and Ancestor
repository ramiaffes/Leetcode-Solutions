/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
int ans2=0;
void dfs( TreeNode* u,int ans,int ans1,TreeNode* root){
    if(u==NULL)return;
    if(u!=root){
    ans2=max(ans2,abs(u->val-ans1));
    ans2=max(ans2,abs(u->val-ans));}
    ans1=min(ans1,u->val);
    ans=max(ans,u->val);
    dfs(u->left,ans,ans1,root);
    dfs(u->right,ans,ans1,root);
	}
class Solution {
public:
    int maxAncestorDiff(TreeNode* root) {
        ans2=0;
        dfs(root,0,1e9,root);
        return ans2;
    }
};

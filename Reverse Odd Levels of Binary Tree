/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
map<int,vector<int>>my1;
void dfs( TreeNode* u,int som){
     
    if(u==NULL)return; 
    my1[som].push_back(u->val);
    som++;   
    
    dfs(u->left,som);
    dfs(u->right,som); 
 
   
		}
map<int,int>val;
void dfs1( TreeNode* u,int som){
     
    if(u==NULL)return; 
    if(som%2==1){
    u->val=my1[som][my1[som].size()-val[som]-1];
    val[som]++;}
    som++;   
    
    dfs1(u->left,som);
    dfs1(u->right,som); 
 
   
		}
class Solution {
public:
    TreeNode* reverseOddLevels(TreeNode* root) {
        my1.clear();
        val.clear();
        dfs(root,0);
        dfs1(root,0);
        return root;
    }
};

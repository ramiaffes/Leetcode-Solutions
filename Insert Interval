class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
       map<int,bool>vis;
        int ans0=newInterval[0];
        int ans1=newInterval[1];
        for(int i=0;i<intervals.size();i++){
            if(not((intervals[i][1]<ans0)or(ans1<intervals[i][0]))){
                vis[i]=1;
                ans0=min(ans0,intervals[i][0]);
                ans1=max(ans1,intervals[i][1]);
            }
        }
    vector<vector<int>>res;
        bool test=false;
    for(int i=0;i<intervals.size();i++){
        if(vis[i]==0){
            res.push_back(intervals[i]);
        }
        else if((vis[i]==1)and(test==false)){
            vector<int>var(2);
            var[0]=ans0;
            var[1]=ans1;
            res.push_back(var);
            test=true;
        }
    }
    if(test==false){
         vector<int>var(2);
            var[0]=ans0;
            var[1]=ans1;
            res.push_back(var);
    }
        sort(res.begin(),res.end());
        return res;
    }
};

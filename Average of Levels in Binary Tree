/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
map<int,vector<int>>res;
int func(TreeNode* root,int level){
    if(root==NULL) return 0;
    res[level].push_back(root->val);
    return func(root->left,level+1)+func(root->right,level+1);
    
}
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {res.clear();
        func(root,0);
        
        vector<double>res1(res.size());
        double som=0;
        for(auto v:res){
            som=0;
            for(auto v1:res[v.first]){
                som+=v1;
            }
        som/=res[v.first].size();
        res1[v.first]=som;
        }
    return res1;
    }
};

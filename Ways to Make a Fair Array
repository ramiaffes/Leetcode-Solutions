class Solution {
public:
    int waysToMakeFair(vector<int>& nums) {
        int n=nums.size();
        if(nums.size()==1){
            return 1;
        }
        if(nums.size()==2)return 0;
        vector<pair<int,int>>dp(n);
        dp[0].first+=nums[0];
        for(int i=1;i<n;i++){
            dp[i]=dp[i-1];
            if(i%2==0){
                dp[i].first+=nums[i];
            }
        else dp[i].second+=nums[i];
        } vector<pair<int,int>>dp1(n);
        if((n-1)%2==0){
            dp1[n-1].first+=nums[n-1];
        }
        else dp1[n-1].second+=nums[n-1];
       
        for(int i=n-2;i>=0;i--){
            dp1[i]=dp1[i+1];
            if(i%2==0)
            dp1[i].first+=nums[i];
            else dp1[i].second+=nums[i];
        }
        int som=0;
        for(int i=1;i<(n-1);i++){
          if(dp[i-1].first+ dp1[i+1].second==dp[i-1].second+dp1[i+1].first){
              som++;
          }
        }
    if(dp1[1].first==dp1[1].second){
        som++;
    }
    if(dp[n-2].first==dp[n-2].second){
        som++;
    }
return som;
    }
};

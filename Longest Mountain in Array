class Solution {
public:
    int longestMountain(vector<int>& arr) {
        int n=arr.size();
        if(n==1)return 0;
        vector<int>dp(n);
        vector<int>dp1(n);
        dp[0]=1;
        for(int i=1;i<n;i++){
            if(arr[i]>arr[i-1])
            dp[i]=dp[i-1]+1;
            else dp[i]=1;
        }
    dp1[n-1]=1;
        for(int i=n-2;i>=0;i--){
            if(arr[i]>arr[i+1])
            dp1[i]=dp1[i+1]+1;
            else dp1[i]=1;
        }
    int ans=0;
    for(int i=0;i<n;i++){
        if((dp[i]==1)or(dp1[i]==1))continue;
        if((dp[i]+dp1[i]-1)>=3)
       ans=max(ans,dp[i]+dp1[i]-1);
    }
    return ans;    }
};

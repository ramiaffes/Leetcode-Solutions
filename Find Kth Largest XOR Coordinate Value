class Solution {
public:
    int kthLargestValue(vector<vector<int>>& matrix, int k) {
        int n=matrix.size();
        int m=matrix[0].size();
        vector<int>se;
        vector<int>dp1(m);
        map<int,int>hashing;
        vector<vector<int>>dp(n,dp1);
        dp[0][0]=matrix[0][0];
        se.push_back(dp[0][0]);
        
        vector<int>dp3(m);
        vector<vector<int>>dp2(n,dp3);
        for(int i=0;i<n;i++){
            dp2[i][0]=matrix[i][0];
            for(int j=1;j<m;j++){
                dp2[i][j]=dp2[i][j-1]^matrix[i][j];
            }
        }

        for(int i=0;i<(m-1);i++){
            dp[0][i+1]=dp[0][i]^matrix[0][i+1];
            se.push_back(dp[0][i+1]);
        }
        for(int i=1;i<n;i++){
            for(int j=0;j<m;j++){
                dp[i][j]=dp[i-1][j]^dp2[i][j];
                se.push_back(dp[i][j]);
                
            }
        }
    int som=0;
    sort(se.begin(),se.end());
    reverse(se.begin(),se.end());
return se[k-1];

    }
};

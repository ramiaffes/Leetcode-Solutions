class Solution {
public:
    string removeKdigits(string num, int k) {
        stack<char>st;
        int k1=0;
        for(int i=0;i<num.length();i++){
            if(st.empty()){st.push(num[i]);}
           else if(k1==k){st.push(num[i]);}
            else if(st.top()<=num[i]){
                st.push(num[i]);
            }
            else{
                while((not(st.empty()))and(st.top()>num[i])){
                st.pop();k1++;
                if(k1==k)break;}
                st.push(num[i]);
                
            }
        }
    string res;
    while(not(st.empty())){
        string val(1,st.top());
        res.append(val);
        st.pop();
    }
    reverse(res.begin(),res.end());
    cout<<res<<" "<<k1<<endl;
    int j=res.size()-1;
    while((j>=0)and(k1!=k)){
        j--;
        k1++;
    }
    int i=0;
    while((i<(res.length()))and(res[i]=='0')){
        i++;
    }
    string res1=res.substr(i,j+1-i);
    if((j+1)<=i)return "0";
    if(res1.length()==0)return "0";
return res1;}
};

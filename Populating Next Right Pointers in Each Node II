/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() : val(0), left(NULL), right(NULL), next(NULL) {}

    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}

    Node(int _val, Node* _left, Node* _right, Node* _next)
        : val(_val), left(_left), right(_right), next(_next) {}
};
*/
map<int,vector<Node*>>my1;
void dfs( Node* u,int som){
     
    if(u==NULL)return; 
    my1[som].push_back(u);
    som++;   
    
    dfs(u->left,som);
    dfs(u->right,som); 
 
   
		}
class Solution {
public:
    Node* connect(Node* root) {
        my1.clear();
        dfs(root,0);
        for(auto v:my1){
            for(int i=0;i<(my1[v.first].size()-1);i++){
               my1[v.first][i]->next=my1[v.first][i+1];
            }
        my1[v.first][my1[v.first].size()-1]->next=NULL;
        }
return root;
    }
};

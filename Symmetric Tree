/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
map<int,vector<int>>res;
void dfs( TreeNode* u,int som){
    
    if(u==NULL){
        res[som].push_back(-101);
    }
    else res[som].push_back(u->val); 
    if(u==NULL)return;
    
    dfs(u->left,som+1);
    dfs(u->right,som+1);
  
		}
class Solution {
public:
    bool isSymmetric(TreeNode* root) {
        res.clear();
        dfs(root,0);
        for(auto v:res){
        vector<int>res1(res[v.first].begin(),res[v.first].end());
        reverse(res1.begin(),res1.end());
        if(res1!=res[v.first])return false;}
        return true;
    }
};

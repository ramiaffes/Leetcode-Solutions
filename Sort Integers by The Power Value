map<int,int>dp;
map<int,bool>vis;
void transform(int i){
    vis[i]=1;
if(i==1){dp[i]=0;return;}
if(i%2==0){
    if(vis[i/2]==0)transform(i/2);
        dp[i]=dp[i/2]+1;

       
     }
else{
if(vis[3*i+1]==0)transform(3*i+1);
        dp[i]=dp[3*i+1]+1;
        
}  
}
class Solution {
public:
    int getKth(int lo, int hi, int k) {
        dp.clear();
        vis.clear();
        for(int i=lo;i<=hi;i++){
            transform(i);
        }
    vector<pair<int,int>>res;
    for(int i=lo;i<=hi;i++){
res.push_back(make_pair(dp[i],i));
    }
sort(res.begin(),res.end());
return res[k-1].second;
    }
};

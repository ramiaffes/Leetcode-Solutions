/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
map<int,vector<int>>res;
void dfs( TreeNode* u,int som){
    if(u==NULL)return;
    res[som].push_back(u->val); 
    dfs(u->left,som+1);
    dfs(u->right,som+1);
  
		}
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        res.clear();
        dfs(root,0);
        vector<int>res1;
        for(auto v:res){
           res1.push_back(res[v.first][res[v.first].size()-1]);
        }
    return res1;
        
    }
};

class Solution {
public:
    int minFlips(int a, int b, int c) {
        vector<int>res1;
        vector<int>res2;
        vector<int>res3;
        int som=0;
        while(a!=0){
            res1.push_back(a%2);
            a/=2;
        }
     while(b!=0){
            res2.push_back(b%2);
            b/=2;
        }
      while(c!=0){
            res3.push_back(c%2);
            c/=2;
        }
    long long int val1=res1.size();
    long long int val2=res2.size();
    long long int val3=res3.size();
    long long int val=max(max(val1,val2),val3);
    while(res1.size()<val){
        res1.push_back(0);
    }
     while(res2.size()<val){
        res2.push_back(0);
    }
    while(res3.size()<val){
        res3.push_back(0);
    }
    for(int i=0;i<val;i++){
        if(res3[i]==0){
            if((res1[i]==1)and(res2[i]==1)){
                som+=2;
            }
        else if(res1[i]!=res2[i]){
            som++;
        }
        }
    else{
        if((res1[i]==0)and(res2[i]==0))som++;
    }
    }
    return som;
    }
};

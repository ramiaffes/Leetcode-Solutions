/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(head==NULL)return NULL;
        ListNode* curr=head;
        map<int,bool>vis;
        while(curr!=NULL){ 
            if(curr->next!=NULL){
            while(curr->next->val==curr->val){
                vis[curr->val]=1;
                curr->next=curr->next->next;
                if(curr->next==NULL)break;
            }}
        curr=curr->next;
        }
    curr=head;
      while(curr!=NULL){ 
          if(curr->next!=NULL){
            while(vis[curr->next->val]==1){
                curr->next=curr->next->next;
                if(curr->next==NULL)break;
            }}
        curr=curr->next;
        }
    if(vis[head->val]==1)return head->next;
    return head;
    }
};

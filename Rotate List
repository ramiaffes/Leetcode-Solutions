/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        int n=0;
        ListNode* curr=head;
        while(curr!=NULL){
            n++;
            curr=curr->next;
        }
        if(n==0)return NULL;
        ListNode* val2=head;
         ListNode* val3=NULL;
        for(int i=0;i<(k%n);i++){
            curr=val2;
            while(curr!=NULL){
                if(curr->next->next==NULL){
                    val3=curr->next;
                    curr->next=curr->next->next;
                val3->next=val2;
                val2=val3;
                    break;
                }
                

                curr=curr->next;
            }
         
         
        
        
            
           
            
        }
   return val2;    }
};

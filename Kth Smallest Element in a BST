/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
vector<int>res;
bool test=false;
void dfs( TreeNode* u,int k){
    if(test==true)return;
    if(u==NULL){return;}
  
    if(res.size()==k){test=true;return;}
    dfs(u->left,k);  res.push_back(u->val);
    dfs(u->right,k);

    }
class Solution {
public:
    int kthSmallest(TreeNode* root, int k) {
        test=false;
        res.clear();
        dfs(root,k);
        return res[k-1];
    }
};

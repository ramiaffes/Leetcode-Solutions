map<long long int,vector<long long int>>adj;
map<long long int,bool>vis1;
 vector<vector<int>>res1;
void dfs1(long long int u){
    if(vis1[u]==1)return;
	vis1[u]=1;
    if(adj[u].empty())return;
	for(auto v:adj[u]){
		dfs1(v);}}
class Solution {
public:
    bool canVisitAllRooms(vector<vector<int>>& rooms) {
        vis1.clear();
        adj.clear();
        
        for(int i=0;i<rooms.size();i++){
            for(int j=0;j<rooms[i].size();j++){
            adj[i].push_back(rooms[i][j]);}
        }
    dfs1(0);
    for(int i=0;i<rooms.size();i++){
        if(vis1[i]==0)return false;
    }
        return true;
    }
};

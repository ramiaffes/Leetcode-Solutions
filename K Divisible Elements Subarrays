class Solution {
public:
    int countDistinct(vector<int>& nums, int k, int p) {
        set<vector<int>> res;
        vector<int>res1;
        vector<int>dp(nums.size());
        vector<int>dp1(nums.size());
        if(nums[0]%p==0){
        dp[0]+=1;}
        for(int i(1);i<nums.size();i++){
            dp[i]=dp[i-1];
            if(nums[i]%p==0)
            dp[i]+=1;
        }
         if(nums[nums.size()-1]%p==0){
        dp1[nums.size()-1]+=1;}
        for(int i(nums.size()-2);i>=0;i--){
          dp1[i]=dp1[i+1];
        if(nums[i]%p==0)
        dp1[i]++;
        }
        for(int i(0);i<nums.size();i++){res1.clear();
            for(int j(i);j<nums.size();j++){
                res1.push_back(nums[j]);
                int som1=dp[nums.size()-1];
                if(i>=1){
                    som1-=dp[i-1];
                }
                if(j<(nums.size()-1)){
                    som1-=dp1[j+1];
                }
                if(som1<=k){
                    res.insert(res1);
                }
                else break;
                
            }
        }
    
    
    return res.size();
    }
};

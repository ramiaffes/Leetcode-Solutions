class Solution {
public:
    long long makeIntegerBeautiful(long long n, int target) {
      long long int n1=n;
        vector<int>res;
        while(n1!=0){
            res.push_back(n1%10);
            n1/=10;
        }
    reverse(res.begin(),res.end());
        int som=0;
        for(auto v:res)som+=v;
        int val2=0;
        for(int i=res.size()-1;i>=1;i--){
            if(res[i]==0){continue;}
            else if(som>target){
                int val=res[i];
                res[i]=0;
                res[i-1]++;
                som-=(val);
                som++;
            }
        else {break;}
        }
    if(som>target){som-=res[0];res[0]=0;}
    if(res[0]==0)res.insert(res.begin(),1);
    long long int p=1;
        long long int res2=0;
    for(int i=res.size()-1;i>=0;i--){
        res2+=res[i]*p;
        p*=10;
    }
    return res2-n;
        
    }
};

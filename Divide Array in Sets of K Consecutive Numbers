class Solution {
public:
    bool isPossibleDivide(vector<int>& nums, int k) {
        sort(nums.begin(),nums.end());
        map<int,int>hashing;
        for(int i=0;i<nums.size();i++){
            hashing[nums[i]]++;
        }
   
    auto ip = unique(nums.begin(), nums.end());
    nums.resize(distance(nums.begin(), ip));
    for(int i=0;i<nums.size();i++){
        if((i+k)>nums.size()) {break;}
        int val=hashing[nums[i]];
        if(val==0)continue;
        for(int j=i;j<(i+k);j++){
            if(nums[j]!=(nums[i]+j-i)){
               
                return false;
            }
        if(hashing[nums[j]]<val)return false;
        hashing[nums[j]]-=val;

        }
    }
    for(int i=0;i<nums.size();i++){
        if(hashing[nums[i]]!=0){return false;}
    }
    return true;
    }
};

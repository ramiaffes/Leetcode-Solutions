/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* constructMaximumBinaryTree(vector<int>& nums) {
        if(nums.empty())return NULL;
        auto it=max_element(nums.begin(),nums.end());
        TreeNode* root=new TreeNode();
        root->val=*it;
        vector<int>nums1(nums.begin(),it);
        vector<int>nums2(it+1,nums.end());
        root->left=constructMaximumBinaryTree(nums1);
        root->right=constructMaximumBinaryTree(nums2);
        return root;
    }
};
